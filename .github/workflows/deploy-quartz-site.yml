name: Deploy Quartz Site

on:
  push:
    branches:
      - deploy

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build Quartz Site
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install and Build Quartz
        run: |
          # 1. Clone the official Quartz repository, as this contains the build tooling.
          echo "Cloning Quartz repository..."
          git clone https://github.com/jackyzha0/quartz.git

          # 2. Navigate into the cloned directory
          cd quartz

          # 3. Install the project dependencies
          echo "Installing dependencies..."
          npm install

          # 4. Replace the default content and configuration with your own files.
          # The source files are in the parent directory (`../`), which is the root of your repository checkout.
          echo "Replacing default content with files from ../ravenpedia/..."
          rm -rf ./content/*
          cp -r ../ravenpedia/* ./content/

          echo "Replacing default config with files from ../quartz_config/..."
          cp ../quartz_config/quartz.config.ts ./quartz.config.ts
          cp ../quartz_config/quartz.layout.ts ./quartz.layout.ts

          # 5. Build the site. The output is generated in a 'public' directory.
          echo "Building site..."
          npx quartz build

          # 6. Move the built site to the '_site' directory at the repository root.
          echo "Moving built files to destination..."
          # The upload action expects the artifact in the root, so we create it there.
          mkdir -p ../_site
          mv ./public/* ../_site

      - name: Verify build folder contents
        run: |
          echo "Listing _site folder contents"
          ls -alh ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4